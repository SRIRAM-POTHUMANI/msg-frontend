{"ast":null,"code":"var _jsxFileName = \"E:\\\\msg\\\\msg-frontend\\\\src\\\\Chatbody.js\",\n    _s = $RefreshSig$();\n\nimport { SearchOutlined, AttachFile, InsertEmoticon, MicNone } from \"@material-ui/icons\";\nimport axios from \"./axios\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chatbody(_ref) {\n  _s();\n\n  let {\n    messages,\n    name,\n    toName\n  } = _ref;\n  const msgsender = \"chat_reciever chat_message \";\n  const msgreciever = \"chat_message\";\n  const [input, setinput] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }; // const [newmessages, setnewMessages]= useState([]); \n  // setnewMessages(messages);\n\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    await axios.post('/messages/new', {\n      message: input,\n      name: name,\n      toname: toName,\n      timestamp: Date(),\n      recieved: true\n    });\n    setinput(\"\"); // await axios.get('/messages/sync').then((response) =>{\n    //   setnewMessages(response.data)\n    // })\n  };\n\n  const privateMessages = { ...messages\n  };\n  const privateMessages1 = privateMessages.filter(msg => {\n    name == msg.name && toName == msg.toname;\n  });\n  console.log(privateMessages1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: [messages.map(msg =>\n      /*#__PURE__*/\n      // let isUser = (name === message.name); \n      _jsxDEV(\"p\", {\n        className: name === msg.name ? msgsender : msgreciever,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat_name\",\n          children: msg.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat_timestamp\",\n          children: msg.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setinput(e.target.value),\n          placeholder: \"Type a message\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: \" send a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MicNone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chatbody, \"fOvqjGMDz/oDFOUfNeElm4kCBGk=\");\n\n_c = Chatbody;\nexport default Chatbody;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbody\");","map":{"version":3,"sources":["E:/msg/msg-frontend/src/Chatbody.js"],"names":["SearchOutlined","AttachFile","InsertEmoticon","MicNone","axios","React","useState","useRef","useEffect","Chatbody","messages","name","toName","msgsender","msgreciever","input","setinput","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","sendMessage","e","preventDefault","post","message","toname","timestamp","Date","recieved","privateMessages","privateMessages1","filter","msg","console","log","map","target","value"],"mappings":"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","sourcesContent":["import { SearchOutlined, AttachFile,InsertEmoticon, MicNone } from \"@material-ui/icons\";\r\nimport axios from \"./axios\";\r\nimport React, { useState, useRef, useEffect  } from \"react\";\r\nimport \"./Chat.css\";\r\n\r\n\r\nfunction Chatbody({ messages, name, toName }) {\r\n  const msgsender = \"chat_reciever chat_message \";\r\n  const msgreciever = \"chat_message\";\r\n  const [input, setinput] = useState([]);\r\n  const messagesEndRef = useRef(null)\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }\r\n  \r\n  // const [newmessages, setnewMessages]= useState([]); \r\n  // setnewMessages(messages);\r\n    const sendMessage= async(e)=>{\r\n      e.preventDefault();\r\n        await axios.post('/messages/new',{\r\n          message: input,\r\n          name: name,\r\n          toname: toName,\r\n          timestamp: Date(),\r\n          recieved: true\r\n        });\r\n        setinput(\"\");\r\n      \r\n        // await axios.get('/messages/sync').then((response) =>{\r\n        //   setnewMessages(response.data)\r\n        // })\r\n    };\r\n\r\n    const privateMessages = {...messages}\r\n    const privateMessages1 = privateMessages.filter((msg)=>{\r\n      name == msg.name && toName == msg.toname}\r\n    )\r\n    console.log(privateMessages1);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"chat_body\">\r\n\r\n{/* {\r\nname === messages.name &&\r\n//  toName === messages.name) \r\n<div> */}\r\n{\r\n  messages.map(msg => (\r\n    // let isUser = (name === message.name); \r\n    <p className={(name === msg.name) ? msgsender : msgreciever}>\r\n    <span className=\"chat_name\">{msg.name}</span>\r\n    {msg.message}\r\n              <span className=\"chat_timestamp\">{msg.timestamp}</span>\r\n  </p>\r\n  ))\r\n}\r\n<div ref={messagesEndRef} />\r\n</div>     \r\n<div className=\"chat_footer\">\r\n    <InsertEmoticon />\r\n    <form>\r\n        <input value={input} onChange={e=> setinput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\r\n        <button onClick={sendMessage} type=\"submit\"> send a message</button>\r\n    </form>\r\n    <MicNone/>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbody\r\n"]},"metadata":{},"sourceType":"module"}
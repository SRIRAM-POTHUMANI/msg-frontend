{"ast":null,"code":"var _jsxFileName = \"E:\\\\msg\\\\msg-frontend\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Pusher from \"pusher-js\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { Avatar } from \"@material-ui/core\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Chatbody from \"./Chatbody\";\nimport \"./Chat.css\"; // import Pusher from \"pusher-js\";\n\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"./axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem(\"token\");\nconst decoded = jwt_decode(token);\nconst existingUser = decoded.existUser.name;\nconst drawerWidth = 200;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\nexport default function Chat() {\n  _s();\n\n  //messages\n  const [username, setUsername] = useState(\"\");\n  const [recievername, setrecievername] = useState(\"\");\n  useEffect(() => {\n    setUsername(existingUser);\n    setrecievername(prompt(\"Please enter to name\"));\n  }, []);\n  var pusher = new Pusher(\"7b837337ccb8aebc6007\", {\n    cluster: \"ap2\"\n  });\n  const [messages, setMessages] = useState([]);\n  const [userList, setuserList] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const sync = async () => {\n    await axios.get(\"/messages/sync\").then(res => {\n      setMessages(res.data);\n    });\n  };\n\n  const userlist = async () => {\n    await axios.get(\"/users/userlist\").then(res => {\n      setuserList(res.data);\n    });\n  }; // useEffect(() => {\n  //   userlist();\n  //   sync();\n  //   scrollToBottom();\n  // });\n  // pusher\n\n\n  useEffect(() => {\n    const channel = pusher.subscribe(\"mern-msg\");\n    channel.bind(\"inserted\", function (newMessage) {\n      sync();\n      user;\n    });\n    return () => {\n      channel.unbind_all();\n    };\n  }, [messages]); //drawers\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  console.log(userlist);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          className: clsx(classes.menuButton, open && classes.hide),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Persistent drawer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sender name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === \"ltr\" ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: userList.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.small\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: users.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, users._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat fixed-bottom\",\n        children: /*#__PURE__*/_jsxDEV(Chatbody, {\n          messages: messages,\n          name: username,\n          toName: recievername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"V9NwfXJnF775TmkkHZPWqB9JEKw=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["E:/msg/msg-frontend/src/Chat.js"],"names":["React","clsx","Pusher","makeStyles","useTheme","Drawer","AppBar","Toolbar","List","CssBaseline","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Avatar","PersonIcon","Chatbody","useEffect","useState","useRef","axios","jwt_decode","token","localStorage","getItem","decoded","existingUser","existUser","name","drawerWidth","useStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Chat","username","setUsername","recievername","setrecievername","prompt","pusher","cluster","messages","setMessages","userList","setuserList","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","sync","get","then","res","data","userlist","channel","subscribe","bind","newMessage","user","unbind_all","classes","open","setOpen","handleDrawerOpen","handleDrawerClose","console","log","paper","direction","map","users","small","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Pusher from \"pusher-js\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport Chatbody from \"./Chatbody\";\r\nimport \"./Chat.css\";\r\n\r\n// import Pusher from \"pusher-js\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"./axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\nconst decoded = jwt_decode(token);\r\n\r\nconst existingUser = decoded.existUser.name;\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function Chat() {\r\n  //messages\r\n  const [username, setUsername] = useState(\"\");\r\n  const [recievername, setrecievername] = useState(\"\");\r\n  useEffect(() => {\r\n    setUsername(existingUser);\r\n    setrecievername(prompt(\"Please enter to name\"));\r\n  }, []);\r\n  var pusher = new Pusher(\"7b837337ccb8aebc6007\", {\r\n    cluster: \"ap2\",\r\n  });\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [userList, setuserList] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  const sync = async () => {\r\n    await axios.get(\"/messages/sync\").then((res) => {\r\n      setMessages(res.data);\r\n    });\r\n  };\r\n  const userlist = async () => {\r\n    await axios.get(\"/users/userlist\").then((res) => {\r\n      setuserList(res.data);\r\n    });\r\n  };\r\n  // useEffect(() => {\r\n  //   userlist();\r\n  //   sync();\r\n  //   scrollToBottom();\r\n  // });\r\n\r\n  // pusher\r\n  useEffect(() => {\r\n    const channel = pusher.subscribe(\"mern-msg\");\r\n    channel.bind(\"inserted\", function (newMessage) {\r\n      sync();\r\n      user\r\n    });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n    };\r\n  }, [messages]);\r\n\r\n  //drawers\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  console.log(userlist);\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Persistent drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <Avatar />\r\n          <h2>Sender name</h2>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <List>\r\n          {userList.map((users) => (\r\n            <ListItem button key={users._id}>\r\n              <ListItemIcon>\r\n                <Avatar className={classes.small}></Avatar>\r\n              </ListItemIcon>\r\n              <ListItemText primary={users.name} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      <main>\r\n        <div className=\"chat fixed-bottom\">\r\n          <Chatbody messages={messages} name={username} toName={recievername} />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
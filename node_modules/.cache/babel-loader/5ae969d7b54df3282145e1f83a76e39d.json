{"ast":null,"code":"var _jsxFileName = \"E:\\\\msg\\\\msg-frontend\\\\src\\\\Chatbody.js\",\n    _s = $RefreshSig$();\n\nimport { SearchOutlined, AttachFile, InsertEmoticon, MicNone } from \"@material-ui/icons\";\nimport axios from \"./axios\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chatbody(_ref) {\n  _s();\n\n  let {\n    messages,\n    name,\n    toName\n  } = _ref;\n  console.log(messages);\n  const msgsender = \"chat_reciever chat_message \";\n  const msgreciever = \"chat_message\";\n  const [input, setinput] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }; // const [newmessages, setnewMessages]= useState([]);\n  // setnewMessages(messages);\n\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    await axios.post(\"/messages/new\", {\n      message: input,\n      name: name,\n      toname: toName,\n      timestamp: Date(),\n      recieved: true\n    });\n    setinput(\"\"); // await axios.get('/messages/sync').then((response) =>{\n    //   setnewMessages(response.data)\n    // })\n  };\n\n  const privateMessages1 = messages.filter(msg => name == msg.name && toName == msg.toname || name == msg.toname && toName == msg.toname);\n  console.log(privateMessages1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: [privateMessages1.map(msg =>\n      /*#__PURE__*/\n      // let isUser = (name === message.name);\n      _jsxDEV(\"p\", {\n        className: name === msg.name ? msgsender : msgreciever,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat_name\",\n          children: msg.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), msg.message, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat_timestamp\",\n          children: msg.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setinput(e.target.value),\n          placeholder: \"Type a message\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: [\" \", \"send a message\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MicNone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chatbody, \"fOvqjGMDz/oDFOUfNeElm4kCBGk=\");\n\n_c = Chatbody;\nexport default Chatbody;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbody\");","map":{"version":3,"sources":["E:/msg/msg-frontend/src/Chatbody.js"],"names":["SearchOutlined","AttachFile","InsertEmoticon","MicNone","axios","React","useState","useRef","useEffect","Chatbody","messages","name","toName","console","log","msgsender","msgreciever","input","setinput","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","sendMessage","e","preventDefault","post","message","toname","timestamp","Date","recieved","privateMessages1","filter","msg","map","target","value"],"mappings":"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","sourcesContent":["import {\r\n  SearchOutlined,\r\n  AttachFile,\r\n  InsertEmoticon,\r\n  MicNone,\r\n} from \"@material-ui/icons\";\r\nimport axios from \"./axios\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\n\r\nfunction Chatbody({ messages, name, toName }) {\r\n  console.log(messages);\r\n  const msgsender = \"chat_reciever chat_message \";\r\n  const msgreciever = \"chat_message\";\r\n  const [input, setinput] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  // const [newmessages, setnewMessages]= useState([]);\r\n  // setnewMessages(messages);\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post(\"/messages/new\", {\r\n      message: input,\r\n      name: name,\r\n      toname: toName,\r\n      timestamp: Date(),\r\n      recieved: true,\r\n    });\r\n    setinput(\"\");\r\n\r\n    // await axios.get('/messages/sync').then((response) =>{\r\n    //   setnewMessages(response.data)\r\n    // })\r\n  };\r\n\r\n  \r\n  const privateMessages1 = messages.filter(\r\n    (msg) =>\r\n      (name == msg.name && toName == msg.toname) ||\r\n      (name == msg.toname && toName == msg.toname)\r\n  );\r\n  console.log(privateMessages1);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"chat_body\">\r\n        {/* {\r\nname === messages.name &&\r\n//  toName === messages.name) \r\n<div> */}\r\n        {privateMessages1.map((msg) => (\r\n          // let isUser = (name === message.name);\r\n          <p className={name === msg.name ? msgsender : msgreciever}>\r\n            <span className=\"chat_name\">{msg.name}</span>\r\n            {msg.message}\r\n            <span className=\"chat_timestamp\">{msg.timestamp}</span>\r\n          </p>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"chat_footer\">\r\n        <InsertEmoticon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setinput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            {\" \"}\r\n            send a message\r\n          </button>\r\n        </form>\r\n        <MicNone />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbody;\r\n"]},"metadata":{},"sourceType":"module"}
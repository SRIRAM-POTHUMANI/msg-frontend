{"ast":null,"code":"var _jsxFileName = \"E:\\\\msg\\\\msg-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport Pusher from \"pusher-js\";\nimport { useEffect, useState, useRef } from 'react';\nimport axios from './axios';\nimport scrollToBottom from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [recievername, setrecievername] = useState('');\n  useEffect(() => {\n    setUsername(prompt('Please enter your name'));\n    setrecievername(prompt('Please enter to name'));\n  }, []);\n  const pusher = new Pusher('f9888cea6103efd008ed', {\n    cluster: 'ap2'\n  });\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const sync = async () => {\n    await axios.get('/messages/sync').then(res => {\n      console.log(res.data);\n      setMessages(res.data);\n    });\n  };\n\n  useEffect(() => {\n    sync();\n    scrollToBottom();\n  }); //pusher\n\n  useEffect(() => {\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', function (newMessage) {\n      sync();\n    });\n    return () => {\n      channel.unbind_all();\n    };\n  }, [messages]); // useEffect(()=>{\n  //     axios.get('/messages/sync').then((response) =>{\n  //       setMessages(response.data)\n  //     })\n  // },[])\n  // useEffect(() => {\n  // console.log(messages)\n  //   var channel = pusher.subscribe('messages');\n  //   channel.bind('inserted', (newMessage) => {\n  //     // alert(JSON.stringify(newMessage));\n  //     setMessages([...messages,newMessage])\n  //   });\n  //  return ()=>{\n  //     channel.unbind_all();\n  //     channel.unsubscribe();\n  //   };\n  // },[messages]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        messages: messages,\n        name: username,\n        toName: recievername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7yPSMviLa+v0X5sjjlZTbAFY7Ls=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/msg/msg-frontend/src/App.js"],"names":["Chat","Sidebar","Pusher","useEffect","useState","useRef","axios","scrollToBottom","App","username","setUsername","recievername","setrecievername","prompt","pusher","cluster","messages","setMessages","messagesEndRef","current","scrollIntoView","behavior","sync","get","then","res","console","log","data","channel","subscribe","bind","newMessage","unbind_all"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,QAA3B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW,CAACG,MAAM,CAAC,wBAAD,CAAP,CAAX;AACAD,IAAAA,eAAe,CAACC,MAAM,CAAC,sBAAD,CAAP,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,QAAMC,MAAM,GAAG,IAAIZ,MAAJ,CAAW,sBAAX,EAAmC;AAChDa,IAAAA,OAAO,EAAE;AADuC,GAAnC,CAAf;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAAyBb,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMc,cAAc,GAAGb,MAAM,CAAC,IAAD,CAA7B;;AACA,QAAME,cAAc,GAAG,MAAM;AAAA;;AAC3B,6BAAAW,cAAc,CAACC,OAAf,gFAAwBC,cAAxB,CAAuC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvC;AACD,GAFD;;AAGA,QAAOC,IAAI,GAAG,YAAW;AACvB,UAAMhB,KAAK,CAACiB,GAAN,CAAU,gBAAV,EACLC,IADK,CACCC,GAAD,IAAO;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAX,MAAAA,WAAW,CAACQ,GAAG,CAACG,IAAL,CAAX;AAED,KALK,CAAN;AAMD,GAPD;;AAQAzB,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,IAAI;AACJf,IAAAA,cAAc;AACd,GAHQ,CAAT,CAvBa,CA4Bf;;AACEJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,OAAO,GAAGf,MAAM,CAACgB,SAAP,CAAiB,UAAjB,CAAhB;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyB,UAASC,UAAT,EAAqB;AAC5CV,MAAAA,IAAI;AACL,KAFD;AAIA,WAAO,MAAI;AACLO,MAAAA,OAAO,CAACI,UAAR;AACD,KAFL;AAGA,GATO,EASJ,CAACjB,QAAD,CATI,CAAT,CA7Ba,CAwCb;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAGA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA,QAAhB;AAA0B,QAAA,IAAI,EAAEP,QAAhC;AAA0C,QAAA,MAAM,EAAEE;AAAlD;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArEQH,G;;KAAAA,G;AAuET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport Pusher from \"pusher-js\";\nimport { useEffect, useState, useRef } from 'react';\nimport axios from './axios';\nimport scrollToBottom from './Chat';\n\nfunction App() {\n  const [username, setUsername] = useState('')\n  const [recievername, setrecievername] = useState('')\n  useEffect(() => {\n    setUsername(prompt('Please enter your name'));\n    setrecievername(prompt('Please enter to name'));\n  }, []) \n  const pusher = new Pusher('f9888cea6103efd008ed', {\n    cluster: 'ap2'\n  }); \n  const [messages, setMessages]= useState([]); \n  const messagesEndRef = useRef(null)\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n  const  sync = async ()=> {\n    await axios.get('/messages/sync')\n    .then((res)=>{\n      console.log(res.data);\n      setMessages(res.data)  \n        \n    })\n  }\n  useEffect(() => {\n   sync()\n   scrollToBottom()  \n  })\n  \n//pusher\n  useEffect(() => {\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', function(newMessage) {\n      sync()\n    });\n\n    return ()=>{\n          channel.unbind_all();\n        };\n   },  [messages])\n  \n  // useEffect(()=>{\n  //     axios.get('/messages/sync').then((response) =>{\n  //       setMessages(response.data)\n  //     })\n  // },[])\n  // useEffect(() => {\n    \n  // console.log(messages)\n  //   var channel = pusher.subscribe('messages');\n  //   channel.bind('inserted', (newMessage) => {\n  //     // alert(JSON.stringify(newMessage));\n  //     setMessages([...messages,newMessage])\n  //   });\n  //  return ()=>{\n  //     channel.unbind_all();\n  //     channel.unsubscribe();\n  //   };\n  // },[messages]);\n  return (\n    <div className=\"app\">\n      <div className=\"app_body\">\n\n      {/* {sidebar} */}\n      <Sidebar />\n      {/* {chat window} */}\n      <Chat messages={messages} name={username} toName={recievername} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}